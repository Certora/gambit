[
  {
    "col": 18,
    "description": "ConditionalOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -6,8 +6,9 @@\n contract BOR {\n     // Expect 1 mutants:\n     // a & b;\n+    /// ConditionalOperatorReplacement(`|` |==> `&`) of: `return a | b;`\n     function bw_or(int256 a, int256 b) public pure returns (int256) {\n-        return a | b;\n+        return a & b;\n     }\n \n     // Expect 1 mutants:\n",
    "id": "1",
    "line": 10,
    "name": "mutants/1/Ops/BOR/BOR.sol",
    "op": "BOR",
    "orig": "|",
    "original": "/Users/benku/Gambit/benchmarks/Ops/BOR/BOR.sol",
    "repl": "&"
  },
  {
    "col": 18,
    "description": "ConditionalOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -12,8 +12,9 @@\n \n     // Expect 1 mutants:\n     // a | b;\n+    /// ConditionalOperatorReplacement(`&` |==> `|`) of: `return a & b;`\n     function bw_and(int256 a, int256 b) public pure returns (int256) {\n-        return a & b;\n+        return a | b;\n     }\n \n     // Expect 1 mutants:\n",
    "id": "2",
    "line": 16,
    "name": "mutants/2/Ops/BOR/BOR.sol",
    "op": "BOR",
    "orig": "&",
    "original": "/Users/benku/Gambit/benchmarks/Ops/BOR/BOR.sol",
    "repl": "|"
  },
  {
    "col": 18,
    "description": "ConditionalOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,7 +18,8 @@\n \n     // Expect 1 mutants:\n     // a | b;\n+    /// ConditionalOperatorReplacement(`^` |==> `&`) of: `return a ^ b;`\n     function bw_xor(int256 a, int256 b) public pure returns (int256) {\n-        return a ^ b;\n+        return a & b;\n     }\n }\n",
    "id": "3",
    "line": 22,
    "name": "mutants/3/Ops/BOR/BOR.sol",
    "op": "BOR",
    "orig": "^",
    "original": "/Users/benku/Gambit/benchmarks/Ops/BOR/BOR.sol",
    "repl": "&"
  }
]