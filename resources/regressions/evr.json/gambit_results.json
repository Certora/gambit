[
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -4,8 +4,9 @@\n \n // This contract provides test functions for relational operator replacement (ROR)\n contract EVR {\n+    /// ExpressionValueReplacement(`a + b` |==> `0`) of: `return a + b;`\n     function add(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a + b;\n+        return 0;\n     }\n \n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n",
    "id": "1",
    "line": 8,
    "name": "mutants/1/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a + b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "0"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -4,8 +4,9 @@\n \n // This contract provides test functions for relational operator replacement (ROR)\n contract EVR {\n+    /// ExpressionValueReplacement(`a + b` |==> `1`) of: `return a + b;`\n     function add(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a + b;\n+        return 1;\n     }\n \n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n",
    "id": "2",
    "line": 8,
    "name": "mutants/2/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a + b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "1"
  },
  {
    "col": 26,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -8,8 +8,9 @@\n         return a + b;\n     }\n \n+    /// ExpressionValueReplacement(`add(a, b)` |==> `0`) of: `uint256 result = add(a, b);`\n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n-        uint256 result = add(a, b);\n+        uint256 result = 0;\n         return result;\n     }\n \n",
    "id": "3",
    "line": 12,
    "name": "mutants/3/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "add(a, b)",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "0"
  },
  {
    "col": 26,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -8,8 +8,9 @@\n         return a + b;\n     }\n \n+    /// ExpressionValueReplacement(`add(a, b)` |==> `1`) of: `uint256 result = add(a, b);`\n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n-        uint256 result = add(a, b);\n+        uint256 result = 1;\n         return result;\n     }\n \n",
    "id": "4",
    "line": 12,
    "name": "mutants/4/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "add(a, b)",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "1"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     }\n \n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n+        /// ExpressionValueReplacement(`result` |==> `0`) of: `return result;`\n         uint256 result = add(a, b);\n-        return result;\n+        return 0;\n     }\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n",
    "id": "5",
    "line": 13,
    "name": "mutants/5/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "result",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "0"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     }\n \n     function evr_test_1(uint256 a, uint256 b) public pure returns (uint256) {\n+        /// ExpressionValueReplacement(`result` |==> `1`) of: `return result;`\n         uint256 result = add(a, b);\n-        return result;\n+        return 1;\n     }\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n",
    "id": "6",
    "line": 13,
    "name": "mutants/6/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "result",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "1"
  },
  {
    "col": 18,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -13,8 +13,9 @@\n         return result;\n     }\n \n+    /// ExpressionValueReplacement(`a < b` |==> `true`) of: `bool c = a < b;`\n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n-        bool c = a < b;\n+        bool c = true;\n         while (c) {\n             b = b - a;\n             c = a < b;\n",
    "id": "7",
    "line": 17,
    "name": "mutants/7/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a < b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "true"
  },
  {
    "col": 18,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -13,8 +13,9 @@\n         return result;\n     }\n \n+    /// ExpressionValueReplacement(`a < b` |==> `false`) of: `bool c = a < b;`\n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n-        bool c = a < b;\n+        bool c = false;\n         while (c) {\n             b = b - a;\n             c = a < b;\n",
    "id": "8",
    "line": 17,
    "name": "mutants/8/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a < b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "false"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -14,8 +14,9 @@\n     }\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n+        /// ExpressionValueReplacement(`c` |==> `true`) of: `while (c) {`\n         bool c = a < b;\n-        while (c) {\n+        while (true) {\n             b = b - a;\n             c = a < b;\n         }\n",
    "id": "9",
    "line": 18,
    "name": "mutants/9/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "c",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "true"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -14,8 +14,9 @@\n     }\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n+        /// ExpressionValueReplacement(`c` |==> `false`) of: `while (c) {`\n         bool c = a < b;\n-        while (c) {\n+        while (false) {\n             b = b - a;\n             c = a < b;\n         }\n",
    "id": "10",
    "line": 18,
    "name": "mutants/10/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "c",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "false"
  },
  {
    "col": 17,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -15,8 +15,9 @@\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n         bool c = a < b;\n+        /// ExpressionValueReplacement(`b - a` |==> `0`) of: `b = b - a;`\n         while (c) {\n-            b = b - a;\n+            b = 0;\n             c = a < b;\n         }\n         return a - b;\n",
    "id": "11",
    "line": 19,
    "name": "mutants/11/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "b - a",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "0"
  },
  {
    "col": 17,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -15,8 +15,9 @@\n \n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n         bool c = a < b;\n+        /// ExpressionValueReplacement(`b - a` |==> `1`) of: `b = b - a;`\n         while (c) {\n-            b = b - a;\n+            b = 1;\n             c = a < b;\n         }\n         return a - b;\n",
    "id": "12",
    "line": 19,
    "name": "mutants/12/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "b - a",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "1"
  },
  {
    "col": 17,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -16,8 +16,9 @@\n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n         bool c = a < b;\n         while (c) {\n+            /// ExpressionValueReplacement(`a < b` |==> `true`) of: `c = a < b;`\n             b = b - a;\n-            c = a < b;\n+            c = true;\n         }\n         return a - b;\n     }\n",
    "id": "13",
    "line": 20,
    "name": "mutants/13/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a < b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "true"
  },
  {
    "col": 17,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -16,8 +16,9 @@\n     function evr_test_2(uint256 a, uint256 b) public pure returns (uint256) {\n         bool c = a < b;\n         while (c) {\n+            /// ExpressionValueReplacement(`a < b` |==> `false`) of: `c = a < b;`\n             b = b - a;\n-            c = a < b;\n+            c = false;\n         }\n         return a - b;\n     }\n",
    "id": "14",
    "line": 20,
    "name": "mutants/14/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a < b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "false"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,7 +18,8 @@\n         while (c) {\n             b = b - a;\n             c = a < b;\n+        /// ExpressionValueReplacement(`a - b` |==> `0`) of: `return a - b;`\n         }\n-        return a - b;\n+        return 0;\n     }\n }\n",
    "id": "15",
    "line": 22,
    "name": "mutants/15/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a - b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "0"
  },
  {
    "col": 16,
    "description": "ExpressionValueReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,7 +18,8 @@\n         while (c) {\n             b = b - a;\n             c = a < b;\n+        /// ExpressionValueReplacement(`a - b` |==> `1`) of: `return a - b;`\n         }\n-        return a - b;\n+        return 1;\n     }\n }\n",
    "id": "16",
    "line": 22,
    "name": "mutants/16/Ops/EVR/EVR.sol",
    "op": "EVR",
    "orig": "a - b",
    "original": "/Users/benku/Gambit/benchmarks/Ops/EVR/EVR.sol",
    "repl": "1"
  }
]