[
  {
    "description": "StatementDeletion",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// StatementDeletion(`return a + b` |==> `assert(true)`) of: `return a + b;`\n     function plus(int256 a, int256 b) public pure returns (int256) {\n-        return a + b;\n+        assert(true);\n     }\n \n     // Expect 4 mutants:\n",
    "id": "1",
    "name": "mutants/1/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`+` |==> `-`) of: `return a + b;`\n     function plus(int256 a, int256 b) public pure returns (int256) {\n-        return a + b;\n+        return a - b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "2",
    "name": "mutants/2/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`+` |==> `*`) of: `return a + b;`\n     function plus(int256 a, int256 b) public pure returns (int256) {\n-        return a + b;\n+        return a * b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "3",
    "name": "mutants/3/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`+` |==> `/`) of: `return a + b;`\n     function plus(int256 a, int256 b) public pure returns (int256) {\n-        return a + b;\n+        return a / b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "4",
    "name": "mutants/4/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -9,8 +9,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`+` |==> `%`) of: `return a + b;`\n     function plus(int256 a, int256 b) public pure returns (int256) {\n-        return a + b;\n+        return a % b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "5",
    "name": "mutants/5/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "StatementDeletion",
    "diff": "--- original\n+++ mutant\n@@ -18,8 +18,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// StatementDeletion(`return a - b` |==> `assert(true)`) of: `return a - b;`\n     function minus(int256 a, int256 b) public pure returns (int256) {\n-        return a - b;\n+        assert(true);\n     }\n \n     // Expect 4 mutants:\n",
    "id": "6",
    "name": "mutants/6/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,8 +18,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`-` |==> `+`) of: `return a - b;`\n     function minus(int256 a, int256 b) public pure returns (int256) {\n-        return a - b;\n+        return a + b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "7",
    "name": "mutants/7/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,8 +18,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`-` |==> `*`) of: `return a - b;`\n     function minus(int256 a, int256 b) public pure returns (int256) {\n-        return a - b;\n+        return a * b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "8",
    "name": "mutants/8/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,8 +18,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`-` |==> `/`) of: `return a - b;`\n     function minus(int256 a, int256 b) public pure returns (int256) {\n-        return a - b;\n+        return a / b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "9",
    "name": "mutants/9/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -18,8 +18,9 @@\n     // a * b\n     // a / b\n     // a % b\n+    /// ArithmeticOperatorReplacement(`-` |==> `%`) of: `return a - b;`\n     function minus(int256 a, int256 b) public pure returns (int256) {\n-        return a - b;\n+        return a % b;\n     }\n \n     // Expect 4 mutants:\n",
    "id": "10",
    "name": "mutants/10/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "StatementDeletion",
    "diff": "--- original\n+++ mutant\n@@ -30,8 +30,9 @@\n     function times_with_parens(\n         int256 a,\n         int256 b\n+    /// StatementDeletion(`return ((a)) * b` |==> `assert(true)`) of: `return ((a)) * b;`\n     ) public pure returns (int256) {\n-        return ((a)) * b;\n+        assert(true);\n     }\n \n     // Expect 5 mutants:\n",
    "id": "11",
    "name": "mutants/11/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -30,8 +30,9 @@\n     function times_with_parens(\n         int256 a,\n         int256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `+`) of: `return ((a)) * b;`\n     ) public pure returns (int256) {\n-        return ((a)) * b;\n+        return ((a)) + b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "12",
    "name": "mutants/12/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -30,8 +30,9 @@\n     function times_with_parens(\n         int256 a,\n         int256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `-`) of: `return ((a)) * b;`\n     ) public pure returns (int256) {\n-        return ((a)) * b;\n+        return ((a)) - b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "13",
    "name": "mutants/13/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -30,8 +30,9 @@\n     function times_with_parens(\n         int256 a,\n         int256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `/`) of: `return ((a)) * b;`\n     ) public pure returns (int256) {\n-        return ((a)) * b;\n+        return ((a)) / b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "14",
    "name": "mutants/14/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -30,8 +30,9 @@\n     function times_with_parens(\n         int256 a,\n         int256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `%`) of: `return ((a)) * b;`\n     ) public pure returns (int256) {\n-        return ((a)) * b;\n+        return ((a)) % b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "15",
    "name": "mutants/15/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "StatementDeletion",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// StatementDeletion(`return ((a)) * b` |==> `assert(true)`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        assert(true);\n     }\n \n     // Expect 5 mutants:\n",
    "id": "16",
    "name": "mutants/16/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `+`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        return ((a)) + b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "17",
    "name": "mutants/17/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `-`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        return ((a)) - b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "18",
    "name": "mutants/18/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `/`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        return ((a)) / b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "19",
    "name": "mutants/19/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `**`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        return ((a)) ** b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "20",
    "name": "mutants/20/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -43,8 +43,9 @@\n     function unsigned_times_with_parens(\n         uint256 a,\n         uint256 b\n+    /// ArithmeticOperatorReplacement(`*` |==> `%`) of: `return ((a)) * b;`\n     ) public pure returns (uint256) {\n-        return ((a)) * b;\n+        return ((a)) % b;\n     }\n \n     // Expect 5 mutants:\n",
    "id": "21",
    "name": "mutants/21/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "StatementDeletion",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// StatementDeletion(`return a ** b` |==> `assert(true)`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        assert(true);\n     }\n }\n",
    "id": "22",
    "name": "mutants/22/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// ArithmeticOperatorReplacement(`**` |==> `+`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        return a + b;\n     }\n }\n",
    "id": "23",
    "name": "mutants/23/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// ArithmeticOperatorReplacement(`**` |==> `-`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        return a - b;\n     }\n }\n",
    "id": "24",
    "name": "mutants/24/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// ArithmeticOperatorReplacement(`**` |==> `*`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        return a * b;\n     }\n }\n",
    "id": "25",
    "name": "mutants/25/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// ArithmeticOperatorReplacement(`**` |==> `/`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        return a / b;\n     }\n }\n",
    "id": "26",
    "name": "mutants/26/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -54,7 +54,8 @@\n     // a * b\n     // a % b\n \n+    /// ArithmeticOperatorReplacement(`**` |==> `%`) of: `return a ** b;`\n     function power(uint256 a, uint256 b) public pure returns (uint256) {\n-        return a ** b;\n+        return a % b;\n     }\n }\n",
    "id": "27",
    "name": "mutants/27/AOR/AOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/AOR/AOR.sol"
  },
  {
    "description": "ArithmeticOperatorReplacement",
    "diff": "--- original\n+++ mutant\n@@ -6,8 +6,9 @@\n contract BOR {\n     // Expect 1 mutants:\n     // a & b;\n+    /// ArithmeticOperatorReplacement(`|` |==> `+`) of: `return a | b;`\n     function bw_or(int256 a, int256 b) public pure returns (int256) {\n-        return a | b;\n+        return a + b;\n     }\n \n     // Expect 1 mutants:\n",
    "id": "28",
    "name": "mutants/28/BOR/BOR.sol",
    "original": "/Users/benku/Gambit/benchmarks/Ops/BOR/BOR.sol"
  }
]