name: Gambit

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo bin
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin
      - name: Build and Test
        run: make

        # upload artifact to action
      - uses: actions/upload-artifact@v3
        if: startsWith(github.event.ref, 'refs/tags/v') # upload the artifact only when we create a new version tag
        with:
          name: gambit-${{ github.ref_name }}
          path: ./target/release/gambit

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v') # create a release only when we create a new version tag
    steps:

        # create a new release in the repository
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

        # download the artifact
      - uses: actions/download-artifact@v3
        with:
          name: gambit-${{ github.ref_name }}

        # re-upload the artifact to the new release
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: gambit-${{ github.ref_name }}
          asset_name: gambit-${{ github.ref_name }}
          asset_content_type: application/rust
