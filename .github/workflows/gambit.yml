name: Gambit

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install rust
        run: |
          curl "https://sh.rustup.rs" -o "rust-init.sh"
          chmod +x "rust-init.sh"
          ./rust-init.sh -y --default-toolchain stable --no-modify-path --profile minimal
          export PATH="$HOME/.cargo/bin:$PATH"
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
          rustup --version
          cargo --version
          rustc --version
      - name: Cache cargo bin
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin
      - name: Install solc for sanity checks
        run: |
              if [[ ! -f "/usr/bin/solc" ]]
              then
                wget -q https://github.com/ethereum/solidity/releases/download/v0.8.13/solc-static-linux 
                mv solc-static-linux solc
                chmod +x solc
                sudo mv solc /usr/bin/solc
              fi
      - name: Build and Test
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Rename gambit binary
        run: mv ./target/x86_64-unknown-linux-gnu/release/gambit ./target/x86_64-unknown-linux-gnu/release/gambit-linux-$TAG
        if: startsWith(github.event.ref, 'refs/tags/v') # only on new tag creation
      - name: Upload artifact to action
        uses: actions/upload-artifact@v3
        if: startsWith(github.event.ref, 'refs/tags/v') # only on new tag creation
        with:
          name: gambit-linux-${{ env.TAG }}
          path: ./target/x86_64-unknown-linux-gnu/release/gambit-linux-${{ env.TAG }}

  build-mac:
    runs-on: macos-latest
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Install rust
        run: |
          curl "https://sh.rustup.rs" -o "rust-init.sh"
          chmod +x "rust-init.sh"
          ./rust-init.sh -y --default-toolchain stable --no-modify-path --profile minimal
          export PATH="$HOME/.cargo/bin:$PATH"
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
          rustup --version
          cargo --version
          rustc --version
      - name: Cache cargo bin
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin
      - name: Install solc for sanity checks
        run: |
              if [[ ! -f "/usr/bin/solc" ]]
              then
                wget -q https://github.com/ethereum/solidity/releases/download/v0.8.13/solc-static-linux 
                mv solc-static-linux solc
                chmod +x solc
                sudo mv solc /usr/bin/solc
              fi
      - name: Build and Test
        run: |
          cargo build --release --target=x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target=aarch64-apple-darwin
      - name: Rename gambit binary
        run: |
          mv ./target/x86_64-apple-darwin/release/gambit ./target/x86_64-apple-darwin/release/gambit-macos-x86_64-$TAG
          mv ./target/aarch64-apple-darwin/release/gambit ./target/aarch64-apple-darwin/release/gambit-macos-aarch64-$TAG
        if: startsWith(github.event.ref, 'refs/tags/v') # only on new tag creation
      - name: Upload artifact to action
        uses: actions/upload-artifact@v3
        if: startsWith(github.event.ref, 'refs/tags/v') # only on new tag creation
        with:
          name: gambit-macos-${{ env.TAG }}
          path: |
            ./target/x86_64-apple-darwin/release/gambit-macos-x86_64-${{ env.TAG }}
            ./target/aarch64-apple-darwin/release/gambit-macos-aarch64-${{ env.TAG }}

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac]
    if: startsWith(github.event.ref, 'refs/tags/v') #  only on new tag creation
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
      - name: Create a release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          release_exist=$(gh release view $TAG 2>&1 || exit 0)
          if [ "$release_exist" = "release not found" ]; then
            gh release create $TAG gambit-linux-$TAG --title "Release $TAG" --generate-notes --latest
            gh release upload $TAG gambit-macos-x86_64-$TAG
            gh release upload $TAG gambit-macos-aarch64-$TAG
          else
            gh release upload $TAG gambit-linux-$TAG
            gh release upload $TAG gambit-macos-x86_64-$TAG
            gh release upload $TAG gambit-macos-aarch64-$TAG
          fi